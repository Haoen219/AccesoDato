CLASES:
	MAIN
	ALUMNO
	MATRICULA
	MODULO
		INTERFAZ ALUMNO MODULO

RELACION:

		INTERFAZ
	___________|____________
       |			|
     ALUMNO		     MODULO
       |
   MATRICULA

	MATRICULA: 1 por alumno, registra todos
		   los modulos que tiene dicho alumno,
		   asi como las 3 notas de este modulo.
		   Tambien guarda la cualificacion.

	MAIN: guarda todos los alumnos y los modulos
	      que se han creado. Alamacenados en un Map,
	      con su INT como identificador llave.

	Variables de la matricula:
		NIA del alumno
		ArrayList del ID de los modulos
			con esto podremos enviar de vuelta al MAIN
			para que este llame a los diferentes modulos

	(posible plan)
	Crear una nueva clase que guarda todos los modulos y alumnos
	en vez de tenerlos en el main. Y crear metodos getAlumno(nia)
	y getModulo(id).

		Metodos que tendria:
			addAlumno()
			addModulo()
			removeAlumno()
			removeModulo()
			getAlumno
			getModulo

			PARA ACTUALIZAR ALUMNOS Y MODULOS AL DAR DE BAJA
				actualizarAlumnos()
				actualizarModulos()


RESUMIDO:
BaseDeDato: Guarda todos los Alumnos y Modulos Existentes
Matricula: Guarda el alumno al que referencia (nia) y los modulos (ID's)
	   con sus notas (Array de double)

Interfaz: funciones:
		darDeAlta()
		darDeBaja()
		imprimir()
		imprimirDetalle()


COMPROBACIONES POR HACER:
PODER EVALUAR
PODER GUARDAR 3 NOTAS
PODER MODIFICAR NOTAS
PODER ELIMINAR AUTOMATICAMENTE LOS MODULOS Y ALUMNOS ASOCIADOS
PODER ELIMINAR MATRICULA AL ELIMINAR EL ALUMNO


POR HACER:
FUNCIONES IMPRIMIR


NUEVO:
CREAR CLASE ALUMNOS Y MODULOS PARA GUARDAR LOS DATOS, EN ESTATICO
ELIMINAR CLASE BLASEDEDATOS
